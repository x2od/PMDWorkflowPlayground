# Unique name for this workflow
name: On Push

# Definition when the workflow should run
on:
  workflow_dispatch:
  push:
    # paths-ignore:
    #   - 'sfdx-project.json'
    #   - 'README.md'
    #   - 'docs/**'
    #   - 'doc-assets/**'
    #   - '.vscode/**'
    #   - '.github/**'
    paths:
      - 'force-app/**'
      - 'config/**'
      - '.github/workflows/ci.yml'

# Jobs to be executed
jobs:
  format-lint:
    runs-on: ubuntu-latest
    steps:
      # Checkout the source code
      - name: 'Checkout source code'
        uses: actions/checkout@v4

      - name: 'Set up node'
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: 'Install NPM'
        run: npm ci

      # Prettier formatting
      - name: 'Code formatting verification with Prettier'
        run: npm run prettier:verify:apex

  pmd-analysis:
    runs-on: ubuntu-latest
    needs: format-lint
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      # Checkout the source code
      - name: 'Checkout source code'
        uses: actions/checkout@v4

      # Install PMD
      - name: 'Install PMD'
        id: pmd
        run: |
          PMD_VERSION=$(curl -s https://api.github.com/repos/pmd/pmd/releases/latest | grep '.tag_name' | sed 's:.*/::' | sed 's:",::')
          echo $PMD_VERSION
          wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F$PMD_VERSION/pmd-dist-$PMD_VERSION-bin.zip
          unzip pmd-dist-$PMD_VERSION-bin.zip -d ~
          mv ~/pmd-bin-$PMD_VERSION ~/pmd
          ~/pmd/bin/pmd --version

      # Run PMD scan
      - name: 'Run PMD scan'
        run: ~/pmd/bin/pmd check --dir force-app --rulesets config/pmd/deployRules.xml --format text --cache .pmdCache --minimum-priority "Medium High" --no-progress

      - name: Upload violations file in SARIF format
        if: steps.pmd.outputs.violations != 0
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: pmd-report.sarif
          category: PMD analysis
#  release-please-main:
#    # runs only on push - not on workflow-dispatch
#    if: github.ref_name == 'main' && github.ref_type == 'branch'
#    runs-on: ubuntu-latest
#    steps:
#      - uses: google-github-actions/release-please-action@v4
#        id: release
#        name: Release Please Action
#        with:
#          token: ${{ secrets.DEPENDABOT_TOKEN }}
#      - name: Echo Release Created
#        run: echo "${{ steps.release.outputs.releases_created }}"
