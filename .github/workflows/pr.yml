# Unique name for this workflow
name: On PR

# Definition when the workflow should run
on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'force-app/**'
      - 'config/**'
      #- 'package.json'
      - '.github/workflows/pr.yml'

# Jobs to be executed
jobs:
  install-pmd:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      # Checkout the source code
      - name: 'Checkout source code'
        uses: actions/checkout@v4

      # Install PMD
      - name: 'Install PMD'
        id: pmd
        run: |
          PMD_VERSION=$(curl -s https://api.github.com/repos/pmd/pmd/releases/latest | grep '.tag_name' | sed 's:.*/::' | sed 's:",::')
          echo $PMD_VERSION
          wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F$PMD_VERSION/pmd-dist-$PMD_VERSION-bin.zip
          unzip pmd-dist-$PMD_VERSION-bin.zip -d ~
          mv ~/pmd-bin-$PMD_VERSION ~/pmd
          ~/pmd/bin/pmd --version

      # Run PMD scan
      - name: 'Run PMD scan'
        id: pmd_sarif
        run: ~/pmd/bin/pmd check --dir force-app --rulesets config/pmd/ruleset.xml --format sarif --report-file pmd-cli-report.sarif --cache .pmdCache --no-progress

      - name: Upload violations file in SARIF format
        if: steps.pmd_sarif.outcome != 'success'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: pmd-cli-report.sarif
          category: PMD analysis

      - name: Upload violations file
        if: steps.pmd_sarif.outcome != 'success'
        uses: actions/upload-artifact@v4
        with:
          path: pmd-cli-report.sarif
          name: pmd-cli-report
          compression-level: 0

      - name: 'Run PMD scan to CSV'
        id: pmd_csv
        run: ~/pmd/bin/pmd check --dir force-app --rulesets config/pmd/ruleset.xml --format csv --report-file pmd.csv --cache .pmdCache --no-progress --property package=false --property ruleSet=false --property problem=false

      - name: Read CSV
        if: steps.pmd_csv.outcome != 'success'
        id: csv
        uses: juliangruber/read-file-action@v1
        with:
          path: ./pmd.csv

      - name: Create MD
        if: steps.pmd_csv.outcome != 'success'
        uses: petems/csv-to-md-table-action@master
        id: csv-table-output
        with:
          csvinput: ${{ steps.csv.outputs.content }}
      - name: Step Table
        if: steps.pmd_csv.outcome != 'success'
        id: md_to_output
        run: |
          echo "${{steps.csv-table-output.outputs.markdown-table}}" >> $GITHUB_STEP_SUMMARY

      - uses: mshick/add-pr-comment@v2
        if: steps.pmd_csv.outcome != 'success'
        with:
          message: |
            ${{steps.csv-table-output.outputs.markdown-table}}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          allow-repeats: false

  # sfdx-scanner:
  #   runs-on: ubuntu-latest
  #   if: ${{ github.actor != 'dependabot[bot]' }}
  #   steps:
  #     # Checkout the source code
  #     - name: 'Checkout source code'
  #       uses: actions/checkout@v4

  #     - name: Install SFDX CLI and Scanner
  #       run: |
  #         npm install @salesforce/cli --global
  #         sf plugins install @salesforce/sfdx-scanner

  #     - name: Run SFDX Scanner
  #       uses: mitchspano/sfdx-scan-pull-request@main
  #       with:
  #         pmdconfig: 'config/pmd/ruleset.xml'
  #         severity-threshold: 5
  #         report-mode: 'comments'
  #         engine: 'pmd'
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
