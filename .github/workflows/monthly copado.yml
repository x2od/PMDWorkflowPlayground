# Unique name for this workflow
name: Repository Scan (Copado)

run-name: Repository manual scan by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      minimum_severity:
        required: true
        type: choice
        description: Minimum Severity (defaults to 5 - show all violations)
        default: '5'
        options:
          - 5
          - 4
          - 3
          - 2
          - 1

jobs:
  run-pmd-copado:
    permissions:
      contents: read # for actions/checkout to fetch code
    outputs:
      filename: ${{ steps.set_filename.outputs.filename }}
      violation_count: ${{ steps.evaluate_errors.outputs.violation_count }}
    runs-on: ubuntu-latest

    steps:
      # Checkout the source code
      - name: 'Checkout source code'
        uses: actions/checkout@v4

      - name: 'Set Filename'
        id: set_filename
        run: echo "filename=${{ github.event.repository.name }}_$(date --utc +%Y%m%d_%H%M%SZ)" >> $GITHUB_OUTPUT

      # Install PMD
      - name: 'Install PMD'
        id: pmd
        run: |
          PMD_VERSION=$(curl -s https://api.github.com/repos/pmd/pmd/releases/latest | grep '.tag_name' | sed 's:.*/::' | sed 's:",::')
          echo $PMD_VERSION
          if [ ! -f "./pmd-dist-$PMD_VERSION-bin.zip" ]; then 
            wget -q https://github.com/pmd/pmd/releases/download/pmd_releases%2F$PMD_VERSION/pmd-dist-$PMD_VERSION-bin.zip
            unzip -q pmd-dist-$PMD_VERSION-bin.zip -d ~
            mv ~/pmd-bin-$PMD_VERSION ~/pmd
            ~/pmd/bin/pmd --version
          fi
          rm -f .pmdCache
      - name: 'Run PMD scan to CSV - APEX'
        id: pmd_csv
        run: |
          ~/pmd/bin/pmd check --dir src --rulesets config/pmd/ruleset.xml --format csv --report-file pmd-apex.csv --cache .pmdCache --no-progress --no-fail-on-violation --no-fail-on-error --property package=false --property problem=false --property ruleSet=false --ignore-list config/pmd/ignore.txt --minimum-priority "${{ github.event.inputs.minimum_severity }}"

      - name: Read CSV - APEX
        id: csv_code
        uses: juliangruber/read-file-action@v1
        with:
          path: ./pmd-apex.csv

      - name: Create MD - APEX
        uses: petems/csv-to-md-table-action@master
        id: csv-table-output-apex
        with:
          csvinput: ${{ steps.csv_code.outputs.content }}

      - name: Step Table - APEX
        id: md_to_output
        run: |
          echo "# CSV - APEX" >> $GITHUB_STEP_SUMMARY
          echo "${{steps.csv-table-output-apex.outputs.markdown-table}}" >> $GITHUB_STEP_SUMMARY

      - name: 'Run PMD scan to CSV - XML'
        id: pmd_csv_xml
        run: |
          ~/pmd/bin/pmd check --dir src --rulesets config/pmd/ruleset.xml --format csv --report-file pmd-xml.csv --cache .pmdCache --no-progress --no-fail-on-violation --no-fail-on-error --property package=false --property problem=false --property ruleSet=false --ignore-list config/pmd/ignore.txt --minimum-priority "${{ github.event.inputs.minimum_severity }}" --force-language xml

      - name: Read CSV - XML
        id: csv_xml
        uses: juliangruber/read-file-action@v1
        with:
          path: ./pmd-xml.csv

      - name: Create MD - XML
        uses: petems/csv-to-md-table-action@master
        id: csv-table-output-xml
        with:
          csvinput: ${{ steps.csv_xml.outputs.content }}

      - name: Step Table - XML
        id: md_to_output_xml
        run: |
          echo "# CSV - XML" >> $GITHUB_STEP_SUMMARY
          echo "${{steps.csv-table-output-xml.outputs.markdown-table}}" >> $GITHUB_STEP_SUMMARY
