name: Scan Violations to Comment

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      blockers_text:
        required: false
        description: csv text of blockers table
        default: ''
        type: string
      blockers_count:
        required: false
        description: number of blocker violations
        default: 0
        type: number
      violations_text:
        required: false
        description: csv text of all violations table
        type: string
        default: ''
      violations_count:
        required: false
        description: number of all violations
        default: 0
        type: number
      hidden_comment_prefix:
        required: true
        type: string
        description: hidden text to find for updating comments

env:
  hidden_comment_prefix: '<!--dtc-scanner-->'
permissions:
  contents: read # for actions/checkout to fetch code
  security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
  actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
  issues: write
  pull-requests: write

jobs:
  violations-to-comment:
    # outputs:
    #   comment_markdown: ${{ steps.assemble_comment.outputs.markdown }}
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Filter blocker columns
        run: |
          printf '${{ inputs.blockers_text}}' > pmd-blockers-input.csv  
          cut -d "," -f 1,3,4 pmd-blockersinput.csv >> pmd-blocker-comment.csv
          cat pmd-blocker-comment.csv
      - name: Read CSV - other
        id: csv_comment
        uses: juliangruber/read-file-action@v1
        with:
          path: ./pmd-blocker-comment.csv

      - name: Create MD - other
        uses: petems/csv-to-md-table-action@master
        id: csv-comment-md
        with:
          csvinput: ${{ steps.csv_comment.outputs.content }}

      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: ${{ inputs.hidden_comment_prefix }}
      - name: Delete comment
        if: steps.find-comment.outputs.comment-id != ''
        run: |
          gh api \
          --method DELETE \
          -H "Accept: application/vnd.github+json" \
          /repos/${{github.repository}}/pulls/comments/${{ steps.find-comment.outputs.comment-id }}
      - name: Update comment
        if: steps.find-comment.outputs.comment-id != '' && false
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: 'replace'
          body: |
            ${{ inputs.hidden_comment_prefix }}
            ## Blockers
            ${{steps.csv-comment-md.outputs.markdown-table}}
            [View details](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})

      - name: Create comment
        if: steps.find-comment.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ${{ inputs.hidden_comment_prefix }}
            ## Blockers
            ${{steps.csv-comment-md.outputs.markdown-table}}
            [View details](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
