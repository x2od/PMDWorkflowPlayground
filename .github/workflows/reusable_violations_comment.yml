name: Scan Violations to Comment

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      blockers_csv:
        required: false
        description: csv text of blockers table
        default: ''
        type: string
      blockers_count:
        required: false
        description: number of blocker violations
        default: 0
        type: number
      violations_csv:
        required: false
        description: csv text of all violations table
        type: string
        default: ''
      violations_count:
        required: false
        description: number of all violations
        default: 0
        type: number

env:
  hidden_comment_prefix: '<!--dtc-scanner-->'

jobs:
  violations-to-comment:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    outputs:
      comment_markdown: ${{ steps.assemble_comment.outputs.markdown }}
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      # may be unnecessary
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean up blockers
        if: ${{ inputs.blockers_count > 0 }}
        run: |
          echo "hello"
          cat blockers_csv > blockers.csv
          awk -F, '{ print "The 1st field is",$1,"the 2nd", $2,"and the 3rd", $3}' blockers.csv

      - name: Clean up other violations
        if: ${{ inputs.violations_count > 0 }}
        run: |
          echo "hello"

      - name: Combine tables
        id: assemble_comment
        run: |
          echo "markdown=hello" >> "$GITHUB_OUTPUT"

      - name: Filter blocker columns
        run: |
          cut -d "," -f 1,3,4 pmd-blockers.csv > pmd-blocker-comment.csv
          #echo "$hidden_comment_prefix" >> pmd-blocker-comment.csv
          cat pmd-blocker-comment.csv

      - name: Read CSV - other
        id: csv_comment
        uses: juliangruber/read-file-action@v1
        with:
          path: ./pmd-blocker-comment.csv

      - name: Create MD - other
        uses: petems/csv-to-md-table-action@master
        id: csv-comment-md
        with:
          csvinput: ${{ steps.csv_comment.outputs.content }}

      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: ${{ env.hidden_comment_prefix }}

      - name: Create comment
        if: steps.find-comment.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            $hidden_comment_prefix
            ${{steps.csv-comment-md.outputs.markdown-table}}

      - name: Update comment
        if: steps.find-comment.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: 'replace'
          body: |
            $hidden_comment_prefix
            ${{steps.csv-comment-md.outputs.markdown-table}}
